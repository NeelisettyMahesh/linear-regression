import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
df = pd.read_csv("Housing.csv")
# Simple Linear Regression
X_simple = df[['area']]
y = df['price']
# Multiple Linear Regression
X_multiple = df[['area', 'bedrooms', 'bathrooms', 'parking']]
# Train-Test Split
X_train_s, X_test_s, y_train_s, y_test_s = train_test_split(X_simple, y, test_size=0.2, random_state=42)
X_train_m, X_test_m, y_train_m, y_test_m = train_test_split(X_multiple, y, test_size=0.2, random_state=42)
#Train Models
model_simple = LinearRegression()
model_simple.fit(X_train_s, y_train_s)
model_multiple = LinearRegression()
model_multiple.fit(X_train_m, y_train_m)
#Evaluate Simple Linear Regression
y_pred_s = model_simple.predict(X_test_s)
print("ðŸ”¹ Simple Linear Regression")
print(f"MAE: {mean_absolute_error(y_test_s, y_pred_s):.2f}")
print(f"MSE: {mean_squared_error(y_test_s, y_pred_s):.2f}")
print(f"RÂ² Score: {r2_score(y_test_s, y_pred_s):.2f}")
print(f"Intercept: {model_simple.intercept_:.2f}")
print(f"Coefficient: {model_simple.coef_[0]:.2f}\n")
#Evaluate Multiple Linear Regression
y_pred_m = model_multiple.predict(X_test_m)
print("ðŸ”¹ Multiple Linear Regression")
print(f"MAE: {mean_absolute_error(y_test_m, y_pred_m):.2f}")
print(f"MSE: {mean_squared_error(y_test_m, y_pred_m):.2f}")
print(f"RÂ² Score: {r2_score(y_test_m, y_pred_m):.2f}")
print(f"Intercept: {model_multiple.intercept_:.2f}")
print(f"Coefficients: {model_multiple.coef_}")
#Plot Simple Regression Line
plt.figure(figsize=(8, 5))
plt.scatter(X_test_s, y_test_s, color='blue', label='Actual')
plt.plot(X_test_s, y_pred_s, color='red', linewidth=2, label='Regression Line')
plt.title("Simple Linear Regression: Area vs Price")
plt.xlabel("Area")
plt.ylabel("Price")
plt.legend()
plt.grid(True)
plt.show()
